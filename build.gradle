import net.minecraftforge.gradle.common.util.ModConfig

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'java'
}

apply plugin: 'net.minecraftforge.gradle'

apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/generic/markdown-git-changelog.gradle'

def theMinecraft_version = findLocalProperty("minecraft_version")
def theForge_Version = findLocalProperty("forge_version")
def theMappings_Version = findLocalProperty("mcp_mappings")

version = makeVersion()

group = 'com.unrealdinnerbone.tramplestopper' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'TrampleStopper'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


String makeVersion() {
    String base = project.property("version")
    String type = project.property("type")
    def ENV = System.getenv()
    String buildNumber = ENV.BUILD_NUMBER ? "${ENV.BUILD_NUMBER}" : "local"
    if(buildNumber == "local") {
        type = "alpha"
    }
    if(type == "alpha" || type == "beta") {
        base += "-" + type
    }
    base += "+build." + buildNumber + ".mcVersion." + minecraft_version
    return base;
}

minecraft {
    mappings channel: 'snapshot', version: "${theMappings_Version}"

    accessTransformer = this.getRootProject().file("src/main/resources/META-INF/accesstransformer.cfg")
    ModConfig projectMod = new ModConfig(project, project.getName());
    projectMod.source(project.sourceSets.main)

    runs {
        client {
            workingDirectory project.file('client')
            mods.add(projectMod)
        }
        server {
            workingDirectory project.file('server')
            mods.add(projectMod)
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${theMinecraft_version}-${theForge_Version}"
}

String findLocalProperty(String name) {
    return this.getRootProject().property(name)
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${archivesBaseName}",
                "Specification-Vendor": "UnRealDinnerbone",
                "Specification-Version": "${theMinecraft_version}", // We are version 1 of ourselves
                "Implementation-Title":  "${archivesBaseName}",
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"UnRealDinnerbone",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

curseforge {
    if (project.hasProperty('unreal_curse_api_key')){
        apiKey = project.getProperty('unreal_curse_api_key')
    }
    project {
        id = project.property("curseforge_id")
        changelog = getGitChangelog
        changelogType = 'markdown'
        releaseType = project.property("type")
        addGameVersion minecraft_version
        addGameVersion 'Forge'
    }
}